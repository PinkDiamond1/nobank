{
  "contractName": "Forwarder",
  "abi": [
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/_deprecated/forwarder.sol\":\"Forwarder\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xfce1eb6398eae0e2b50251140866a70a3106193f101972c878bba1dbf44929ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f0709c3f462b28b400f57db181254ad970967c3b49a8948ef5e05929b106ffe\",\"dweb:/ipfs/QmNe3sRmPKw1T7q7m733tk7tFKpi3jo9PCisDPMbjeg3kJ\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x7de6e64d4a8075e803a972cc77c4c91463e0c3777e4110eacfb5d4a71759b2fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83b3b09ef36374c1c104ee896797dadf2e81466d2143b481d3f1ddc7d9f3873\",\"dweb:/ipfs/QmSWtqs28RHDezRWBbmEfqiPYwsGTKj44NRbuxvZ96cqMU\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e\",\"dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"project:/contracts/_deprecated/forwarder.sol\":{\"keccak256\":\"0xf90ab1bded0371e1181ea97697083d3bbe633e87ebc3975f405f42e97a67c3cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4abfb2f26c8e98173c2bbf257793121bebc2ed33fc7a603fd5b066fd3354c485\",\"dweb:/ipfs/QmWgnVhcGFdYG6T2Rt3mjW5mvwKgWwaQ3LBLbqyBns7aqK\"]},\"project:/contracts/_deprecated/relayer.sol\":{\"keccak256\":\"0x0b9adb92d7e8cd9c06cc94f24fbbfe8537d89a4b778ef5af859b234733bbd4e4\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://6e84f6f21e108676eda7ad432b992323ce5b944ec96ba97a6fa75fbb26ffdfb9\",\"dweb:/ipfs/QmeY7nJ2tktuhsQUtocVouxBNv7GfXTbovthYP24WGdNvP\"]},\"project:/contracts/core/wallet_data.sol\":{\"keccak256\":\"0x0f896c6f47de7af044b475b299ac8c923adcd127f99bb7dafbffeb5ea88a2f1c\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b9015103213ad2830fb650e5754ef9e98184c75a6a3730bf81fea227f251bdca\",\"dweb:/ipfs/QmZynpdoWQVCFNMUUviuU5DrZ8HA7iHSnoUsxkYiCLHZD6\"]},\"project:/contracts/ens/ens_resolver.sol\":{\"keccak256\":\"0x93c0182f99a7f98803ecf0aa1dd75c2eeb4cc3ee3b0274d6128ef063ed1b62e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3038cc6ccfdfb75c840f294ca070f4b91b0c4914e985a8d6e2a3de3ab778ec3\",\"dweb:/ipfs/QmcKxhjuf8iC5w6bbgKRTPQM3GXDavG3NfJU4dMy7jUxdL\"]},\"project:/contracts/ens/registrar_interface.sol\":{\"keccak256\":\"0x7861efd78eaf577dbca5386a044618fb6b454db2f507637a68386ca40af09012\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5fc14c9a9facd67ca4ea114ef47efe601f6d8fd9dcff0416d3447a3e582de4e0\",\"dweb:/ipfs/QmNj7MafBtLHnrqAQDb1pmU2w4xkMeUpZBiZtm24agqvH5\"]},\"project:/contracts/external/create2.sol\":{\"keccak256\":\"0x2c597acce474bd116d0650e5f68f4f04d82ed80fb0ad08fa2c808c5ecf3cf324\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f10ad502239525b9f2d1fe534815d1d037f11b4c23a0c78b7f310ce235c10be0\",\"dweb:/ipfs/QmVXLUADfAyU3RFi1VMW9fFfthvxLtHpjrw2MutLskuRAM\"]},\"project:/contracts/external/signatureutil.sol\":{\"keccak256\":\"0x877b6002dbe1397aa3bf49a7070a8a858f38894e2b2e29266182947cf4c588b3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a1d6e697ac68f97555befc3bce07506dde78bfec02946ce10bc43627ff1a6d44\",\"dweb:/ipfs/QmW4EGtqzPLiTRbgiwtBb2JJ2hRokEmDptmFN4jn3KwhN4\"]},\"project:/contracts/external/walletproxy.sol\":{\"keccak256\":\"0xf93be23c6c45c2c27e7d079a451348d5e9e5cfe845996b54252bcdf2eb3785b3\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://ae919d0660dc9a33dbc5f289b89c5520bdaf8b0eb0e3a824264cedbe328c1474\",\"dweb:/ipfs/QmTAtfkvwCL9DW14JrU1sSnyPkdQK8m36wdVUyswVsDKkR\"]},\"project:/contracts/features/daily_limit.sol\":{\"keccak256\":\"0x8ccc3ff8c3975e2b3708e961e99139ffabbadf636f69ec5aec792cff9ee12572\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://cc15feec742196ce35337b0d4a1d28bed84ce9412d7b65d875f5a0fb25427445\",\"dweb:/ipfs/QmWvCKWut9dRhH1MNHj63wT2UW41CbHzRxcx5Jg9fDjouK\"]},\"project:/contracts/features/guardians.sol\":{\"keccak256\":\"0xd7f736de5f43c65ae59a3bc481c3a2f5527de3a0f1ab71618f24fe8cac1e441c\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://94cb207d089f415d5a5552e18d3421e1e19328ac1c891783364ade9949d066fd\",\"dweb:/ipfs/Qmak3Jewqh7g9Rz2HWdnj3z9dynWEvytFcXdMLfGb4D6xV\"]},\"project:/contracts/features/metatx.sol\":{\"keccak256\":\"0x44586b44944836d718f7a289d79634d367784509d4aabfbb5d38dcec861006f2\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://2b66f133b6d2f5cc76ccb07c423c607d1e126d37c2c79e83d79e2c5f4b6f5ce5\",\"dweb:/ipfs/Qmavs76AzYDiwyMNQxTdyE3A7eWYV1NtfnrTq4y7KMRu1U\"]},\"project:/contracts/features/name_service.sol\":{\"keccak256\":\"0xb9e24d874fb8afec7fbc2c4fb893799696cfe272560337e733031fa3bbacaf6f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://bfd1c3d558a960386f337397be50c4ca12648a76aaf710e283b23fe8379d38e7\",\"dweb:/ipfs/QmVgm3eCws36FiKpLdoJF1MRhP1N2TrCidWqYbb28hg7cT\"]},\"project:/contracts/features/recovery.sol\":{\"keccak256\":\"0x073cc096066b978d98391b0f8ae37e335b4e1c68d6b51c77f2c2318175c87668\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://704170b74ef70a1ef648947ff0b49ba273dd5f1c16a6a8662dc8b4c6fb058bb2\",\"dweb:/ipfs/QmXnj3hcyU2hBebDrn5q1LrvKutCTAkfTnvqcVCzzYXbre\"]},\"project:/contracts/otp_wallet.sol\":{\"keccak256\":\"0x338399bd8d1cca78881dc118373516215fc305b735c956a9a903f9b92b6e8479\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://fab58da21b677cc99e65dfede7bfc69f3ac9e2455c3bfbdf90a37349fe280590\",\"dweb:/ipfs/QmR2gJfmgPhJVjDWeAMGLZiFp3z8Gh7AA5KM12ap2QvWW9\"]},\"project:/contracts/wallet_factory.sol\":{\"keccak256\":\"0xcf2d3537a6eac67029e104d502826f0b9892f65e20e306030c88c091161b0970\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d2b6829d399de57cc49e2510ca3e182492afc629856fdc1c5eccfb3b1e068f58\",\"dweb:/ipfs/QmXKy1J2jim8UnHXQMhRr5Jh1GebdvCviaqUwRLuuSBJFe\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506101d8806100206000396000f3fe6080604052600436106100225760003560e01c806319ab453c146100af576100aa565b366100aa5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638f70bfa0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561008f57600080fd5b505af11580156100a3573d6000803e3d6000fd5b5050505050005b600080fd5b3480156100bb57600080fd5b506100d660048036038101906100d19190610130565b6100d8565b005b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008135905061012a8161018b565b92915050565b60006020828403121561014257600080fd5b60006101508482850161011b565b91505092915050565b60006101648261016b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61019481610159565b811461019f57600080fd5b5056fea26469706673582212201d16c691bfe1e19da441601afd17c7c424de2dbeb31359ab35a5859f3bafbf3364736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100225760003560e01c806319ab453c146100af576100aa565b366100aa5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638f70bfa0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561008f57600080fd5b505af11580156100a3573d6000803e3d6000fd5b5050505050005b600080fd5b3480156100bb57600080fd5b506100d660048036038101906100d19190610130565b6100d8565b005b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008135905061012a8161018b565b92915050565b60006020828403121561014257600080fd5b60006101508482850161011b565b91505092915050565b60006101648261016b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61019481610159565b811461019f57600080fd5b5056fea26469706673582212201d16c691bfe1e19da441601afd17c7c424de2dbeb31359ab35a5859f3bafbf3364736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:835:42",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:95:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "77:29:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "86:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "86:20:42"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "77:5:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "150:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "115:34:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "115:41:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "115:41:42"
                }
              ]
            },
            "name": "abi_decode_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "45:6:42",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "53:3:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "61:5:42",
                "type": ""
              }
            ],
            "src": "7:155:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "242:204:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "288:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "297:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "300:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "290:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "290:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "290:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "263:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "272:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "259:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "259:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "284:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "255:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "255:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "252:2:42"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "314:125:42",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "329:15:42",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "343:1:42",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "333:6:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "358:71:42",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "401:9:42"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "412:6:42"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "397:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "397:22:42"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "421:7:42"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "368:28:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "368:61:42"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "358:6:42"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "212:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "223:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "235:6:42",
                "type": ""
              }
            ],
            "src": "168:278:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "505:51:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "515:35:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "544:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "526:17:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "526:24:42"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "515:7:42"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "487:5:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "497:7:42",
                "type": ""
              }
            ],
            "src": "452:104:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "607:81:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "617:65:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "632:5:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "639:42:42",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "628:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "628:54:42"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "617:7:42"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "589:5:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "599:7:42",
                "type": ""
              }
            ],
            "src": "562:126:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "745:87:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "810:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "819:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "822:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "812:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "812:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "812:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "768:5:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "801:5:42"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address_payable",
                              "nodeType": "YulIdentifier",
                              "src": "775:25:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "775:32:42"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "765:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "765:43:42"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "758:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "758:51:42"
                  },
                  "nodeType": "YulIf",
                  "src": "755:2:42"
                }
              ]
            },
            "name": "validator_revert_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "738:5:42",
                "type": ""
              }
            ],
            "src": "694:138:42"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 42,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "123:332:20:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "123:332:20:-:0;;;;;;;;;;;;;;;;;;;;;;;404:6;;;;;;;;;;396:30;;;433:9;396:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;123:332;;;;;178:81;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;245:7;236:6;;:16;;;;;;;;;;;;;;;;;;178:81;:::o;7:155:42:-;;99:6;86:20;77:29;;115:41;150:5;115:41;:::i;:::-;67:95;;;;:::o;168:278::-;;284:2;272:9;263:7;259:23;255:32;252:2;;;300:1;297;290:12;252:2;343:1;368:61;421:7;412:6;401:9;397:22;368:61;:::i;:::-;358:71;;314:125;242:204;;;;:::o;452:104::-;;526:24;544:5;526:24;:::i;:::-;515:35;;505:51;;;:::o;562:126::-;;639:42;632:5;628:54;617:65;;607:81;;;:::o;694:138::-;775:32;801:5;775:32;:::i;:::-;768:5;765:43;755:2;;822:1;819;812:12;755:2;745:87;:::o",
  "source": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.0;\n\n// import \"../IERC20.sol\";\nimport \"./relayer.sol\";\n\ncontract Forwarder {\n\n    address payable wallet;\n\n    function init(address payable _wallet) external {\n        wallet = _wallet;\n    }\n\n    /// @dev Fallback function allows to deposit ether.\n    receive() external payable {\n        //wallet.transfer(msg.value);\n        Relayer(wallet).processDeposit{value:msg.value}();\n\n    }\n}",
  "sourcePath": "/Users/okudajunta/Documents/solidity/harmony-totp/contracts/_deprecated/forwarder.sol",
  "ast": {
    "absolutePath": "project:/contracts/_deprecated/forwarder.sol",
    "exportedSymbols": {
      "Address": [
        3331
      ],
      "Context": [
        3353
      ],
      "Core": [
        4390
      ],
      "Create2": [
        4770
      ],
      "DailyLimit": [
        5030
      ],
      "Forwarder": [
        3729
      ],
      "Guardians": [
        5231
      ],
      "IERC1155": [
        1352
      ],
      "IERC1155Receiver": [
        1393
      ],
      "IERC165": [
        3666
      ],
      "IERC20": [
        2032
      ],
      "IERC721": [
        2989
      ],
      "IERC721Receiver": [
        3007
      ],
      "IProxy": [
        4906
      ],
      "MetaTx": [
        5638
      ],
      "NameService": [
        5728
      ],
      "Ownable": [
        149
      ],
      "Recovery": [
        5968
      ],
      "RegistrarInterface": [
        4511
      ],
      "Relayer": [
        4308
      ],
      "Resolver": [
        4417
      ],
      "SignatureUtil": [
        4897
      ],
      "TOTPWallet": [
        7400
      ],
      "WalletFactory": [
        8041
      ],
      "WalletProxy": [
        4937
      ]
    },
    "id": 3730,
    "license": "GPL-2.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3701,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:24:20"
      },
      {
        "absolutePath": "project:/contracts/_deprecated/relayer.sol",
        "file": "./relayer.sol",
        "id": 3702,
        "nodeType": "ImportDirective",
        "scope": 3730,
        "sourceUnit": 4309,
        "src": "98:23:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3729,
        "linearizedBaseContracts": [
          3729
        ],
        "name": "Forwarder",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3704,
            "mutability": "mutable",
            "name": "wallet",
            "nodeType": "VariableDeclaration",
            "scope": 3729,
            "src": "149:22:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 3703,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "149:15:20",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3713,
              "nodeType": "Block",
              "src": "226:33:20",
              "statements": [
                {
                  "expression": {
                    "id": 3711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3709,
                      "name": "wallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3704,
                      "src": "236:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3710,
                      "name": "_wallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3706,
                      "src": "245:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "236:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 3712,
                  "nodeType": "ExpressionStatement",
                  "src": "236:16:20"
                }
              ]
            },
            "functionSelector": "19ab453c",
            "id": 3714,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3706,
                  "mutability": "mutable",
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 3714,
                  "src": "192:23:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3705,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "192:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "191:25:20"
            },
            "returnParameters": {
              "id": 3708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "226:0:20"
            },
            "scope": 3729,
            "src": "178:81:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3727,
              "nodeType": "Block",
              "src": "348:105:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 3719,
                              "name": "wallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3704,
                              "src": "404:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 3718,
                            "name": "Relayer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4308,
                            "src": "396:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Relayer_$4308_$",
                              "typeString": "type(contract Relayer)"
                            }
                          },
                          "id": 3720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "396:15:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Relayer_$4308",
                            "typeString": "contract Relayer"
                          }
                        },
                        "id": 3721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "processDeposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4138,
                        "src": "396:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 3724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 3722,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "433:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "433:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "396:47:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 3725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "396:49:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3726,
                  "nodeType": "ExpressionStatement",
                  "src": "396:49:20"
                }
              ]
            },
            "documentation": {
              "id": 3715,
              "nodeType": "StructuredDocumentation",
              "src": "265:51:20",
              "text": "@dev Fallback function allows to deposit ether."
            },
            "id": 3728,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "328:2:20"
            },
            "returnParameters": {
              "id": 3717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "348:0:20"
            },
            "scope": 3729,
            "src": "321:132:20",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3730,
        "src": "123:332:20"
      }
    ],
    "src": "45:410:20"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/_deprecated/forwarder.sol",
    "exportedSymbols": {
      "Address": [
        3331
      ],
      "Context": [
        3353
      ],
      "Core": [
        4390
      ],
      "Create2": [
        4770
      ],
      "DailyLimit": [
        5030
      ],
      "Forwarder": [
        3729
      ],
      "Guardians": [
        5231
      ],
      "IERC1155": [
        1352
      ],
      "IERC1155Receiver": [
        1393
      ],
      "IERC165": [
        3666
      ],
      "IERC20": [
        2032
      ],
      "IERC721": [
        2989
      ],
      "IERC721Receiver": [
        3007
      ],
      "IProxy": [
        4906
      ],
      "MetaTx": [
        5638
      ],
      "NameService": [
        5728
      ],
      "Ownable": [
        149
      ],
      "Recovery": [
        5968
      ],
      "RegistrarInterface": [
        4511
      ],
      "Relayer": [
        4308
      ],
      "Resolver": [
        4417
      ],
      "SignatureUtil": [
        4897
      ],
      "TOTPWallet": [
        7400
      ],
      "WalletFactory": [
        8041
      ],
      "WalletProxy": [
        4937
      ]
    },
    "id": 3730,
    "license": "GPL-2.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3701,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:24:20"
      },
      {
        "absolutePath": "project:/contracts/_deprecated/relayer.sol",
        "file": "./relayer.sol",
        "id": 3702,
        "nodeType": "ImportDirective",
        "scope": 3730,
        "sourceUnit": 4309,
        "src": "98:23:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3729,
        "linearizedBaseContracts": [
          3729
        ],
        "name": "Forwarder",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3704,
            "mutability": "mutable",
            "name": "wallet",
            "nodeType": "VariableDeclaration",
            "scope": 3729,
            "src": "149:22:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 3703,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "149:15:20",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3713,
              "nodeType": "Block",
              "src": "226:33:20",
              "statements": [
                {
                  "expression": {
                    "id": 3711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3709,
                      "name": "wallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3704,
                      "src": "236:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3710,
                      "name": "_wallet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3706,
                      "src": "245:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "236:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 3712,
                  "nodeType": "ExpressionStatement",
                  "src": "236:16:20"
                }
              ]
            },
            "functionSelector": "19ab453c",
            "id": 3714,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3706,
                  "mutability": "mutable",
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 3714,
                  "src": "192:23:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3705,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "192:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "191:25:20"
            },
            "returnParameters": {
              "id": 3708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "226:0:20"
            },
            "scope": 3729,
            "src": "178:81:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3727,
              "nodeType": "Block",
              "src": "348:105:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 3719,
                              "name": "wallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3704,
                              "src": "404:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 3718,
                            "name": "Relayer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4308,
                            "src": "396:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Relayer_$4308_$",
                              "typeString": "type(contract Relayer)"
                            }
                          },
                          "id": 3720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "396:15:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Relayer_$4308",
                            "typeString": "contract Relayer"
                          }
                        },
                        "id": 3721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "processDeposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4138,
                        "src": "396:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 3724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 3722,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "433:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "433:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "396:47:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 3725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "396:49:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3726,
                  "nodeType": "ExpressionStatement",
                  "src": "396:49:20"
                }
              ]
            },
            "documentation": {
              "id": 3715,
              "nodeType": "StructuredDocumentation",
              "src": "265:51:20",
              "text": "@dev Fallback function allows to deposit ether."
            },
            "id": 3728,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "328:2:20"
            },
            "returnParameters": {
              "id": 3717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "348:0:20"
            },
            "scope": 3729,
            "src": "321:132:20",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3730,
        "src": "123:332:20"
      }
    ],
    "src": "45:410:20"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-09-17T10:27:58.138Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}