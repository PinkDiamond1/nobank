{
  "contractName": "WalletProxy",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_masterCopy",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_masterCopy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"author\":\"Stefan George - <stefan@gnosis.io>Richard Meissner - <richard@gnosis.io>\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor function sets address of master copy contract.\",\"params\":{\"_masterCopy\":\"Master copy address.\"}}},\"title\":\"WalletProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/external/walletproxy.sol\":\"WalletProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/external/walletproxy.sol\":{\"keccak256\":\"0xf93be23c6c45c2c27e7d079a451348d5e9e5cfe845996b54252bcdf2eb3785b3\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://ae919d0660dc9a33dbc5f289b89c5520bdaf8b0eb0e3a824264cedbe328c1474\",\"dweb:/ipfs/QmTAtfkvwCL9DW14JrU1sSnyPkdQK8m36wdVUyswVsDKkR\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516102bf3803806102bf833981810160405281019061003291906100fd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156100a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100999061018c565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610206565b6000815190506100f7816101ef565b92915050565b60006020828403121561010f57600080fd5b600061011d848285016100e8565b91505092915050565b60006101336024836101ac565b91507f496e76616c6964206d617374657220636f707920616464726573732070726f7660008301527f69646564000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600060208201905081810360008301526101a581610126565b9050919050565b600082825260208201905092915050565b60006101c8826101cf565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101f8816101bd565b811461020357600080fd5b50565b60ab806102146000396000f3fe608060405273ffffffffffffffffffffffffffffffffffffffff600054167fa619486e0000000000000000000000000000000000000000000000000000000060003514156050578060005260206000f35b3660008037600080366000845af43d6000803e60008114156070573d6000fd5b3d6000f3fea2646970667358221220b6e874c87baf6a68e0e687d10910bc4ec0777e93391ee347256674df42f6678e64736f6c63430008000033",
  "deployedBytecode": "0x608060405273ffffffffffffffffffffffffffffffffffffffff600054167fa619486e0000000000000000000000000000000000000000000000000000000060003514156050578060005260206000f35b3660008037600080366000845af43d6000803e60008114156070573d6000fd5b3d6000f3fea2646970667358221220b6e874c87baf6a68e0e687d10910bc4ec0777e93391ee347256674df42f6678e64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1779:42",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:42"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:42"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:42",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:42",
                "type": ""
              }
            ],
            "src": "7:143:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "233:207:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "288:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "291:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "281:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "254:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "263:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "250:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "250:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "275:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "246:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "246:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "243:2:42"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "305:128:42",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "320:15:42",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "334:1:42",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "324:6:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "349:74:42",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "395:9:42"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "406:6:42"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "391:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "391:22:42"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "415:7:42"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "359:31:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "359:64:42"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "349:6:42"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "203:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "214:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "226:6:42",
                "type": ""
              }
            ],
            "src": "156:284:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "592:222:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "602:74:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "668:3:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "673:2:42",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "609:58:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "609:67:42"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "602:3:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "697:3:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "702:1:42",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "693:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "693:11:42"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "706:34:42",
                        "type": "",
                        "value": "Invalid master copy address prov"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "686:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "686:55:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "686:55:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "762:3:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "767:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "758:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "758:12:42"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "772:6:42",
                        "type": "",
                        "value": "ided"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "751:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "751:28:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "751:28:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "789:19:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "800:3:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "805:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "796:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:12:42"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "789:3:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_108d84599042957b954e89d43b52f80be89321dfc114a37800028eba58dafc87_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "580:3:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "588:3:42",
                "type": ""
              }
            ],
            "src": "446:368:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "991:248:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1001:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1013:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1024:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1009:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1009:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1001:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1048:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1059:1:42",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1044:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1044:17:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1067:4:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1073:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1063:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1063:20:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1037:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1037:47:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1037:47:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1093:139:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1227:4:42"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_108d84599042957b954e89d43b52f80be89321dfc114a37800028eba58dafc87_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1101:124:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1101:131:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1093:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_108d84599042957b954e89d43b52f80be89321dfc114a37800028eba58dafc87__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "971:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "986:4:42",
                "type": ""
              }
            ],
            "src": "820:419:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1341:73:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1358:3:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1363:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1351:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1351:19:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1351:19:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1379:29:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1398:3:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1403:4:42",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1394:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1394:14:42"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1379:11:42"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1313:3:42",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1318:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1329:11:42",
                "type": ""
              }
            ],
            "src": "1245:169:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1465:51:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1475:35:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1504:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1486:17:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1486:24:42"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1475:7:42"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1447:5:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1457:7:42",
                "type": ""
              }
            ],
            "src": "1420:96:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1567:81:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1577:65:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1592:5:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1599:42:42",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1588:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1588:54:42"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1577:7:42"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1549:5:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1559:7:42",
                "type": ""
              }
            ],
            "src": "1522:126:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1697:79:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1754:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1763:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1766:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1756:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1756:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1756:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1720:5:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1745:5:42"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1727:17:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1727:24:42"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1717:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1717:35:42"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1710:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1710:43:42"
                  },
                  "nodeType": "YulIf",
                  "src": "1707:2:42"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1690:5:42",
                "type": ""
              }
            ],
            "src": "1654:122:42"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_108d84599042957b954e89d43b52f80be89321dfc114a37800028eba58dafc87_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n\n        mstore(add(pos, 0), \"Invalid master copy address prov\")\n\n        mstore(add(pos, 32), \"ided\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_108d84599042957b954e89d43b52f80be89321dfc114a37800028eba58dafc87__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_108d84599042957b954e89d43b52f80be89321dfc114a37800028eba58dafc87_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 42,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [],
  "sourceMap": "616:1514:30:-:0;;;1054:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1132:1;1109:25;;:11;:25;;;;1101:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;1198:11;1185:10;;:24;;;;;;;;;;;;;;;;;;1054:162;616:1514;;7:143:42;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:368::-;;609:67;673:2;668:3;609:67;:::i;:::-;602:74;;706:34;702:1;697:3;693:11;686:55;772:6;767:2;762:3;758:12;751:28;805:2;800:3;796:12;789:19;;592:222;;;:::o;820:419::-;;1024:2;1013:9;1009:18;1001:26;;1073:9;1067:4;1063:20;1059:1;1048:9;1044:17;1037:47;1101:131;1227:4;1101:131;:::i;:::-;1093:139;;991:248;;;:::o;1245:169::-;;1363:6;1358:3;1351:19;1403:4;1398:3;1394:14;1379:29;;1341:73;;;;:::o;1420:96::-;;1486:24;1504:5;1486:24;:::i;:::-;1475:35;;1465:51;;;:::o;1522:126::-;;1599:42;1592:5;1588:54;1577:65;;1567:81;;;:::o;1654:122::-;1727:24;1745:5;1727:24;:::i;:::-;1720:5;1717:35;1707:2;;1766:1;1763;1756:12;1707:2;1697:79;:::o;616:1514:30:-;;;;;;;",
  "deployedSourceMap": "616:1514:30:-:0;;;1495:42;1491:1;1485:8;1481:57;1673:66;1669:1;1656:15;1653:87;1650:2;;;1769:11;1766:1;1759:22;1808:4;1805:1;1798:15;1650:2;1859:14;1856:1;1853;1840:34;1957:1;1954;1938:14;1935:1;1922:11;1915:5;1902:57;1993:16;1990:1;1987;1972:38;2038:1;2029:7;2026:14;2023:2;;;2053:16;2050:1;2043:27;2023:2;2095:16;2092:1;2085:27",
  "source": "// SPDX-License-Identifier: LGPL-3.0-or-later\n// Taken from: https://github.com/gnosis/safe-contracts/blob/development/contracts/proxies/GnosisSafeProxy.sol\npragma solidity >=0.7.0;\n\n/// @title IProxy - Helper interface to access masterCopy of the Proxy on-chain\n/// @author Richard Meissner - <richard@gnosis.io>\ninterface IProxy {\n    function masterCopy() external view returns (address);\n}\n\n/// @title WalletProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\n/// @author Stefan George - <stefan@gnosis.io>\n/// @author Richard Meissner - <richard@gnosis.io>\ncontract WalletProxy {\n\n    // masterCopy always needs to be first declared variable, to ensure that it is at the same location in the contracts to which calls are delegated.\n    // To reduce deployment costs this variable is internal and needs to be retrieved via `getStorageAt`\n    address internal masterCopy;\n\n    /// @dev Constructor function sets address of master copy contract.\n    /// @param _masterCopy Master copy address.\n    constructor(address _masterCopy)\n    {\n        require(_masterCopy != address(0), \"Invalid master copy address provided\");\n        masterCopy = _masterCopy;\n    }\n\n    /// @dev Fallback function forwards all transactions and returns all received return data.\n    fallback()\n        payable\n        external\n    {\n        // solium-disable-next-line security/no-inline-assembly\n        assembly {\n            let _masterCopy := and(sload(0), 0xffffffffffffffffffffffffffffffffffffffff)\n            // 0xa619486e == keccak(\"masterCopy()\"). The value is right padded to 32-bytes with 0s\n            if eq(calldataload(0), 0xa619486e00000000000000000000000000000000000000000000000000000000) {\n                mstore(0, _masterCopy)\n                return(0, 0x20)\n            }\n            calldatacopy(0, 0, calldatasize())\n            let success := delegatecall(gas(), _masterCopy, 0, calldatasize(), 0, 0)\n            returndatacopy(0, 0, returndatasize())\n            if eq(success, 0) { revert(0, returndatasize()) }\n            return(0, returndatasize())\n        }\n    }\n}",
  "sourcePath": "/Users/okudajunta/Documents/solidity/harmony-totp/contracts/external/walletproxy.sol",
  "ast": {
    "absolutePath": "project:/contracts/external/walletproxy.sol",
    "exportedSymbols": {
      "IProxy": [
        4906
      ],
      "WalletProxy": [
        4937
      ]
    },
    "id": 4938,
    "license": "LGPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4899,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "157:24:30"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 4900,
          "nodeType": "StructuredDocumentation",
          "src": "183:131:30",
          "text": "@title IProxy - Helper interface to access masterCopy of the Proxy on-chain\n @author Richard Meissner - <richard@gnosis.io>"
        },
        "fullyImplemented": false,
        "id": 4906,
        "linearizedBaseContracts": [
          4906
        ],
        "name": "IProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "a619486e",
            "id": 4905,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "masterCopy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "356:2:30"
            },
            "returnParameters": {
              "id": 4904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4903,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4905,
                  "src": "382:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4902,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "382:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "381:9:30"
            },
            "scope": 4906,
            "src": "337:54:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4938,
        "src": "314:79:30"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4907,
          "nodeType": "StructuredDocumentation",
          "src": "395:221:30",
          "text": "@title WalletProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\n @author Stefan George - <stefan@gnosis.io>\n @author Richard Meissner - <richard@gnosis.io>"
        },
        "fullyImplemented": true,
        "id": 4937,
        "linearizedBaseContracts": [
          4937
        ],
        "name": "WalletProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4909,
            "mutability": "mutable",
            "name": "masterCopy",
            "nodeType": "VariableDeclaration",
            "scope": 4937,
            "src": "900:27:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4908,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "900:7:30",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4929,
              "nodeType": "Block",
              "src": "1091:125:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4916,
                          "name": "_masterCopy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4912,
                          "src": "1109:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4919,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1132:1:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1124:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4917,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1124:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1124:10:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1109:25:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d617374657220636f707920616464726573732070726f7669646564",
                        "id": 4922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1136:38:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_108d84599042957b954e89d43b52f80be89321dfc114a37800028eba58dafc87",
                          "typeString": "literal_string \"Invalid master copy address provided\""
                        },
                        "value": "Invalid master copy address provided"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_108d84599042957b954e89d43b52f80be89321dfc114a37800028eba58dafc87",
                          "typeString": "literal_string \"Invalid master copy address provided\""
                        }
                      ],
                      "id": 4915,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1101:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1101:74:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4924,
                  "nodeType": "ExpressionStatement",
                  "src": "1101:74:30"
                },
                {
                  "expression": {
                    "id": 4927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4925,
                      "name": "masterCopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4909,
                      "src": "1185:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4926,
                      "name": "_masterCopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4912,
                      "src": "1198:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1185:24:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4928,
                  "nodeType": "ExpressionStatement",
                  "src": "1185:24:30"
                }
              ]
            },
            "documentation": {
              "id": 4910,
              "nodeType": "StructuredDocumentation",
              "src": "934:115:30",
              "text": "@dev Constructor function sets address of master copy contract.\n @param _masterCopy Master copy address."
            },
            "id": 4930,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4912,
                  "mutability": "mutable",
                  "name": "_masterCopy",
                  "nodeType": "VariableDeclaration",
                  "scope": 4930,
                  "src": "1066:19:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4911,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1066:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1065:21:30"
            },
            "returnParameters": {
              "id": 4914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1091:0:30"
            },
            "scope": 4937,
            "src": "1054:162:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4935,
              "nodeType": "Block",
              "src": "1365:763:30",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1448:674:30",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1462:76:30",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1491:1:30",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "sload",
                                "nodeType": "YulIdentifier",
                                "src": "1485:5:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1485:8:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1495:42:30",
                              "type": "",
                              "value": "0xffffffffffffffffffffffffffffffffffffffff"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1481:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1481:57:30"
                        },
                        "variables": [
                          {
                            "name": "_masterCopy",
                            "nodeType": "YulTypedName",
                            "src": "1466:11:30",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1741:86:30",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1766:1:30",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "_masterCopy",
                                    "nodeType": "YulIdentifier",
                                    "src": "1769:11:30"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1759:6:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1759:22:30"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1759:22:30"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1805:1:30",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1808:4:30",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "return",
                                  "nodeType": "YulIdentifier",
                                  "src": "1798:6:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1798:15:30"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1798:15:30"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1669:1:30",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "1656:12:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1656:15:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1673:66:30",
                              "type": "",
                              "value": "0xa619486e00000000000000000000000000000000000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "1653:2:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1653:87:30"
                        },
                        "nodeType": "YulIf",
                        "src": "1650:2:30"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1853:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1856:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1859:12:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1859:14:30"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1840:12:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1840:34:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1840:34:30"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1887:72:30",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "1915:3:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1915:5:30"
                            },
                            {
                              "name": "_masterCopy",
                              "nodeType": "YulIdentifier",
                              "src": "1922:11:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1935:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1938:12:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1938:14:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1954:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1957:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "1902:12:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1902:57:30"
                        },
                        "variables": [
                          {
                            "name": "success",
                            "nodeType": "YulTypedName",
                            "src": "1891:7:30",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1987:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1990:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1993:14:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1993:16:30"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1972:14:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1972:38:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1972:38:30"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2041:31:30",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2050:1:30",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "2053:14:30"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2053:16:30"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2043:6:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2043:27:30"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2043:27:30"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "success",
                              "nodeType": "YulIdentifier",
                              "src": "2029:7:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2038:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "2026:2:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2026:14:30"
                        },
                        "nodeType": "YulIf",
                        "src": "2023:2:30"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2092:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2095:14:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2095:16:30"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "2085:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2085:27:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2085:27:30"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [],
                  "id": 4934,
                  "nodeType": "InlineAssembly",
                  "src": "1439:683:30"
                }
              ]
            },
            "documentation": {
              "id": 4931,
              "nodeType": "StructuredDocumentation",
              "src": "1222:90:30",
              "text": "@dev Fallback function forwards all transactions and returns all received return data."
            },
            "id": 4936,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4932,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1325:2:30"
            },
            "returnParameters": {
              "id": 4933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1365:0:30"
            },
            "scope": 4937,
            "src": "1317:811:30",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4938,
        "src": "616:1514:30"
      }
    ],
    "src": "157:1973:30"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/external/walletproxy.sol",
    "exportedSymbols": {
      "IProxy": [
        4906
      ],
      "WalletProxy": [
        4937
      ]
    },
    "id": 4938,
    "license": "LGPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4899,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "157:24:30"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 4900,
          "nodeType": "StructuredDocumentation",
          "src": "183:131:30",
          "text": "@title IProxy - Helper interface to access masterCopy of the Proxy on-chain\n @author Richard Meissner - <richard@gnosis.io>"
        },
        "fullyImplemented": false,
        "id": 4906,
        "linearizedBaseContracts": [
          4906
        ],
        "name": "IProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "a619486e",
            "id": 4905,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "masterCopy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "356:2:30"
            },
            "returnParameters": {
              "id": 4904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4903,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4905,
                  "src": "382:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4902,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "382:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "381:9:30"
            },
            "scope": 4906,
            "src": "337:54:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4938,
        "src": "314:79:30"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4907,
          "nodeType": "StructuredDocumentation",
          "src": "395:221:30",
          "text": "@title WalletProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\n @author Stefan George - <stefan@gnosis.io>\n @author Richard Meissner - <richard@gnosis.io>"
        },
        "fullyImplemented": true,
        "id": 4937,
        "linearizedBaseContracts": [
          4937
        ],
        "name": "WalletProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4909,
            "mutability": "mutable",
            "name": "masterCopy",
            "nodeType": "VariableDeclaration",
            "scope": 4937,
            "src": "900:27:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4908,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "900:7:30",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4929,
              "nodeType": "Block",
              "src": "1091:125:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4916,
                          "name": "_masterCopy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4912,
                          "src": "1109:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4919,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1132:1:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1124:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4917,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1124:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1124:10:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1109:25:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d617374657220636f707920616464726573732070726f7669646564",
                        "id": 4922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1136:38:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_108d84599042957b954e89d43b52f80be89321dfc114a37800028eba58dafc87",
                          "typeString": "literal_string \"Invalid master copy address provided\""
                        },
                        "value": "Invalid master copy address provided"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_108d84599042957b954e89d43b52f80be89321dfc114a37800028eba58dafc87",
                          "typeString": "literal_string \"Invalid master copy address provided\""
                        }
                      ],
                      "id": 4915,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1101:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1101:74:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4924,
                  "nodeType": "ExpressionStatement",
                  "src": "1101:74:30"
                },
                {
                  "expression": {
                    "id": 4927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4925,
                      "name": "masterCopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4909,
                      "src": "1185:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4926,
                      "name": "_masterCopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4912,
                      "src": "1198:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1185:24:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4928,
                  "nodeType": "ExpressionStatement",
                  "src": "1185:24:30"
                }
              ]
            },
            "documentation": {
              "id": 4910,
              "nodeType": "StructuredDocumentation",
              "src": "934:115:30",
              "text": "@dev Constructor function sets address of master copy contract.\n @param _masterCopy Master copy address."
            },
            "id": 4930,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4912,
                  "mutability": "mutable",
                  "name": "_masterCopy",
                  "nodeType": "VariableDeclaration",
                  "scope": 4930,
                  "src": "1066:19:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4911,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1066:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1065:21:30"
            },
            "returnParameters": {
              "id": 4914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1091:0:30"
            },
            "scope": 4937,
            "src": "1054:162:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4935,
              "nodeType": "Block",
              "src": "1365:763:30",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1448:674:30",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1462:76:30",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1491:1:30",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "sload",
                                "nodeType": "YulIdentifier",
                                "src": "1485:5:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1485:8:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1495:42:30",
                              "type": "",
                              "value": "0xffffffffffffffffffffffffffffffffffffffff"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1481:3:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1481:57:30"
                        },
                        "variables": [
                          {
                            "name": "_masterCopy",
                            "nodeType": "YulTypedName",
                            "src": "1466:11:30",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1741:86:30",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1766:1:30",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "_masterCopy",
                                    "nodeType": "YulIdentifier",
                                    "src": "1769:11:30"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1759:6:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1759:22:30"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1759:22:30"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1805:1:30",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1808:4:30",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "return",
                                  "nodeType": "YulIdentifier",
                                  "src": "1798:6:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1798:15:30"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1798:15:30"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1669:1:30",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "1656:12:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1656:15:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1673:66:30",
                              "type": "",
                              "value": "0xa619486e00000000000000000000000000000000000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "1653:2:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1653:87:30"
                        },
                        "nodeType": "YulIf",
                        "src": "1650:2:30"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1853:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1856:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1859:12:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1859:14:30"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1840:12:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1840:34:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1840:34:30"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1887:72:30",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "1915:3:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1915:5:30"
                            },
                            {
                              "name": "_masterCopy",
                              "nodeType": "YulIdentifier",
                              "src": "1922:11:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1935:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1938:12:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1938:14:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1954:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1957:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "1902:12:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1902:57:30"
                        },
                        "variables": [
                          {
                            "name": "success",
                            "nodeType": "YulTypedName",
                            "src": "1891:7:30",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1987:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1990:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1993:14:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1993:16:30"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1972:14:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1972:38:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1972:38:30"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2041:31:30",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2050:1:30",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "2053:14:30"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2053:16:30"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2043:6:30"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2043:27:30"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2043:27:30"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "success",
                              "nodeType": "YulIdentifier",
                              "src": "2029:7:30"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2038:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "2026:2:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2026:14:30"
                        },
                        "nodeType": "YulIf",
                        "src": "2023:2:30"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2092:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2095:14:30"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2095:16:30"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "2085:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2085:27:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2085:27:30"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [],
                  "id": 4934,
                  "nodeType": "InlineAssembly",
                  "src": "1439:683:30"
                }
              ]
            },
            "documentation": {
              "id": 4931,
              "nodeType": "StructuredDocumentation",
              "src": "1222:90:30",
              "text": "@dev Fallback function forwards all transactions and returns all received return data."
            },
            "id": 4936,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4932,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1325:2:30"
            },
            "returnParameters": {
              "id": 4933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1365:0:30"
            },
            "scope": 4937,
            "src": "1317:811:30",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4938,
        "src": "616:1514:30"
      }
    ],
    "src": "157:1973:30"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-09-17T10:27:58.193Z",
  "devdoc": {
    "author": "Stefan George - <stefan@gnosis.io>Richard Meissner - <richard@gnosis.io>",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Constructor function sets address of master copy contract.",
        "params": {
          "_masterCopy": "Master copy address."
        }
      }
    },
    "title": "WalletProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}